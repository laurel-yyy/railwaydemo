<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ourgroup.railway.mapper.OrderItemMapper">
    <!-- Result map for OrderItem entity -->
    <resultMap id="orderItemResultMap" type="com.ourgroup.railway.model.dao.OrderItemDO">
        <id property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="orderSn" column="order_sn"/>
        <result property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="trainId" column="train_id"/>
        <result property="carriageNumber" column="carriage_number"/>
        <result property="seatType" column="seat_type"/>
        <result property="seatNumber" column="seat_number"/>
        <result property="realName" column="real_name"/>
        <result property="idType" column="id_type"/>
        <result property="idCard" column="id_card"/>
        <result property="phone" column="phone"/>
        <result property="status" column="status"/>
        <result property="amount" column="amount"/>
        <result property="ticketType" column="ticket_type"/>
    </resultMap>
    
    <!-- Insert a new order item -->
    <insert id="insert" parameterType="com.ourgroup.railway.model.dao.OrderItemDO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_order_item (
            create_time, update_time, order_sn, user_id, username, train_id, 
            carriage_number, seat_type, seat_number, real_name, id_type, id_card, 
            phone, status, amount, ticket_type
        ) VALUES (
            #{createTime}, #{updateTime}, #{orderSn}, #{userId}, #{username}, #{trainId},
            #{carriageNumber}, #{seatType}, #{seatNumber}, #{realName}, #{idType}, #{idCard},
            #{phone}, #{status}, #{amount}, #{ticketType}
        )
    </insert>
    
    <!-- Batch insert order items -->
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_order_item (
            create_time, update_time, order_sn, user_id, username, train_id, 
            carriage_number, seat_type, seat_number, real_name, id_type, id_card, 
            phone, status, amount, ticket_type
        ) VALUES 
        <foreach collection="list" item="item" separator=",">
            (
            #{item.createTime}, #{item.updateTime}, #{item.orderSn}, #{item.userId}, #{item.username}, #{item.trainId},
            #{item.carriageNumber}, #{item.seatType}, #{item.seatNumber}, #{item.realName}, #{item.idType}, #{item.idCard},
            #{item.phone}, #{item.status}, #{item.amount}, #{item.ticketType}
            )
        </foreach>
    </insert>
    
    <!-- Update an existing order item -->
    <update id="update" parameterType="com.ourgroup.railway.model.dao.OrderItemDO">
        UPDATE t_order_item
        SET update_time = #{updateTime},
            order_sn = #{orderSn},
            user_id = #{userId},
            username = #{username},
            train_id = #{trainId},
            carriage_number = #{carriageNumber},
            seat_type = #{seatType},
            seat_number = #{seatNumber},
            real_name = #{realName},
            id_type = #{idType},
            id_card = #{idCard},
            phone = #{phone},
            status = #{status},
            amount = #{amount},
            ticket_type = #{ticketType}
        WHERE id = #{id}
    </update>
    
    <!-- Delete an order item by ID -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM t_order_item WHERE id = #{id}
    </delete>
    
    <!-- Find an order item by ID -->
    <select id="findById" parameterType="java.lang.Long" resultMap="orderItemResultMap">
        SELECT * FROM t_order_item WHERE id = #{id}
    </select>
    
    <!-- Find order items by order number -->
    <select id="findByOrderSn" parameterType="java.lang.String" resultMap="orderItemResultMap">
        SELECT * FROM t_order_item WHERE order_sn = #{orderSn}
    </select>
    
    <!-- Find order items by user ID -->
    <select id="findByUserId" parameterType="java.lang.String" resultMap="orderItemResultMap">
        SELECT * FROM t_order_item WHERE user_id = #{userId} ORDER BY create_time DESC
    </select>
    
    <!-- Find order items by train ID -->
    <select id="findByTrainId" parameterType="java.lang.Long" resultMap="orderItemResultMap">
        SELECT * FROM t_order_item WHERE train_id = #{trainId}
    </select>
    
    <!-- Find order items by seat information -->
    <select id="findBySeatInfo" resultMap="orderItemResultMap">
        SELECT * FROM t_order_item 
        WHERE train_id = #{trainId} 
        AND carriage_number = #{carriageNumber} 
        AND seat_number = #{seatNumber}
    </select>
    
    <!-- Update status by order number -->
    <update id="updateStatusByOrderSn">
        UPDATE t_order_item
        SET status = #{status},
            update_time = NOW()
        WHERE order_sn = #{orderSn}
    </update>
    
    <!-- Find order items by ID card -->
    <select id="findByIdCard" parameterType="java.lang.String" resultMap="orderItemResultMap">
        SELECT * FROM t_order_item WHERE id_card = #{idCard} ORDER BY create_time DESC
    </select>
    
    <!-- Count order items by order number -->
    <select id="countByOrderSn" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_order_item WHERE order_sn = #{orderSn}
    </select>
</mapper>